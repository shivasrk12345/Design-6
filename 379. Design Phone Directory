from collections import deque
class PhoneDirectory:

    def __init__(self, maxNumbers: int):
        """
        Initialize your data structure here
        @param maxNumbers - The maximum numbers that can be stored in the phone directory.
        """
        # initialize queue and hashset and add all the number from 0 to maxNumbers - 1 into both
        self.queue= deque()
        self.hashset = set()
        for i in range(maxNumbers):
            self.hashset.add(i)
            self.queue.append(i)
        
        
        
        

    def get(self) -> int:
        """
        Provide a number which is not assigned to anyone.
        @return - Return an available number. Return -1 if none is available.
        """
        # check whether queue is empty or not
        if(self.queue):
            elt = self.queue.popleft();
            self.hashset.remove(elt);
            return elt;
        
        return -1;
            
        

    def check(self, number: int) -> bool:
        """
        Check if a number is available or not.
        """
        # check whether the number is present in hashset or not
        if(number in self.hashset):
            return True
        return False;
        
        

    def release(self, number: int) -> None:
        """
        Recycle or release a number.
        """
        # check whether the number is present in hashset or not
        if(number not in self.hashset):
            # if number is not present, add it to the hashset and to the queue
            self.hashset.add(number);
            self.queue.appendleft(number);
        
        '''
        time complexity = O(1)
        space complexity = O(maxinteger)
        '''
        


# Your PhoneDirectory object will be instantiated and called as such:
# obj = PhoneDirectory(maxNumbers)
# param_1 = obj.get()
# param_2 = obj.check(number)
# obj.release(number)
